@model AlphaByteTechnologyExamCore.Models.Employee

@{
    ViewData["Title"] = "Edit";
    var divisionList = ViewBag.divisionList;
    var departmentList = ViewBag.departmentList;

    string dateValue = Model.Dob.ToString("yyyy-MM-dd", System.Globalization.CultureInfo.InvariantCulture);
}


<div class="card">
    <div class="card-header">Employee update form </div>
    <div class="card-body mb-2">

        @using (Html.BeginForm("Update", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", @class = "", role = "form", id = "employeeUpdateForm", @name = "employeeUpdateForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row mb-2">
                <div class="col-md-6 mb-2">
                    <div class="row">
                        @Html.LabelFor(model => model.IdNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.IdNumber, new { htmlAttributes = new { @class = "form-control", @type = "number", pattern = "[0-9]{8}" } })
                            @Html.ValidationMessageFor(model => model.IdNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6"></div>

                <div class="col-md-6 mb-2">
                    <div class="row">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6 mb-2">
                    <div class="row">
                        @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-4" })
                        
                        <div class="col-md-8">
                            <input class="form-control text-box single-line" data-val="true" data-val-required="The Date of birth field is required." id="Dob" name="Dob" type="date" value="@dateValue">
                            @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6 mb-2">
                    <div class="row">
                        @Html.LabelFor(model => model.DivId, "Division", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.DivId, new SelectList(divisionList, "Id", "Name"), "-- Select division --", new { @class = "form-control", @id = "divisionInput" })
                            @Html.ValidationMessageFor(model => model.DivId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6 mb-2">
                    <div class="row">
                        @Html.LabelFor(model => model.DeptId, "Department", htmlAttributes: new { @class = "control-label  col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.DeptId, new SelectList(departmentList, "Id", "Name"), "-- Select department --", new { @class = "form-control", @id = "departmentInput" })
                            @Html.ValidationMessageFor(model => model.DeptId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="row">
                        @Html.LabelFor(model => model.ResumeFile, "Resume", htmlAttributes: new { @class = "control-label col-md-2" })

                        <div class="col-md-10">
                            <input type="file" name="ResumeFile" id="ResumeFile" class="form-control" accept=".pdf, .doc" />
                            @Html.ValidationMessageFor(model => model.ResumeFile, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <input type="submit" value="Update" class="btn btn-success" />
                </div>
            </div>
        }
    </div>

    <div class="card-body">
        <div class="d-flex justify-content-center">
            <a class="btn btn-outline-secondary" href="@Url.Action("Index", "Employee")">Go to Index</a>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation/dist/additional-methods.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#divisionInput').on('change', function () {
                var selectedDivision = $("#divisionInput").val();
                $("#departmentInput").val("");
                if (selectedDivision.length > 0) {
                    $.ajax({
                        type: "GET",
                        url: "/Employee/GetDepartmentByDivision",
                        data: { divID: selectedDivision },
                        dataType: "json",
                        success: function (data) {
                            if (data.length > 0) {
                                $("#departmentInput").prop("disabled", false);
                                $("#departmentInput").html("");
                                $("#departmentInput").append("<option value='" + item.id + "'>" + item.name + "</option");
                                $(data).each(function (index, item) {
                                    $("#departmentInput").append("<option value='" + item.Id + "'>" + item.Name + "</option");
                                });
                            }

                            if (data.length == 0) {
                                $("#departmentInput").prop("disabled", true);
                            }
                        },
                        error: function (error) {
                            console.error(error);
                        }
                    });
                }

            });

        });
    </script>
}
